#!/bin/bash

# Launch Flux within a SLURM job

declare -r prog=${0##*/}

declare cmd_wrapper=

declare -r slurm_conf="/etc/slurm/slurm.conf"
declare -r path_srun="/usr/bin/srun"
declare srun_partition=
declare srun_opts="--propagate=CORE"
declare srun_nnodes=${SLURM_NNODES}
declare srun_ntasks=

find_cmbd() {
    test -n "$FLUX_EXEC_PATH" && PATH=$FLUX_EXEC_PATH:$PATH
    which cmbd 2>/dev/null
}
declare path_cmbd=$(find_cmbd)
test -n "$path_cmbd" || path_cmbd="@X_LIBEXECDIR@/flux/cmbd"

declare cmbd_kary=
declare cmbd_modules="api,modctl,kvs,live"
declare cmbd_opts="--pmi-boot --logdest=cmbd.log"
declare cmbd_modopts=

declare -r path_getopt="/usr/bin/getopt"
declare -r short_opts="hN:n:op:M:O:k:Xp:"
declare -r long_opts="\
help,nnodes:,ntasks:,overcommit,partition:,module:,modopt:,k-ary:,noexec"

declare -r usage="\
Usage: $prog OPTIONS [command [args...]]\n\
   -N,--nnodes N               srun: set number of nodes\n\
   -n,--ntasks N               srun: set number of tasks\n\
   -o,--overcommit             srun: set overcommit\n\
   -p,--partition NAME         srun: set partition\n\
   -M,--module NAME            load additional module\n\
   -O,--modopt NAME:var=val    set additional module option\n\
   -k,--k-ary N                set reduction tree fanout\n\
   -X,--noexec                 print command line without running it"

usage()    { echo -e "$usage" >&2; }
log_msg()  { echo -e "$prog: $@";  }
die()      { log_msg "Fatal: $@"; exit 1; }

GETOPT=$($path_getopt -o $short_opts -l $long_opts -n $prog -- $@)
if [ $? != 0 ]; then
    usage
    exit 1
fi
eval set -- "$GETOPT"
while true; do
    case $1 in
        -h|--help)       usage; exit 0                               ;;
        -N|--nnodes)     srun_nnodes=$2;                     shift 2 ;;
        -n|--ntasks)     srun_ntasks=$2;                     shift 2 ;;
        -o|--overcommit) srun_opts="$srun_opts --overcommit";shift 1 ;;
        -p|--partition)  srun_partition=$2;                  shift 2 ;;
        -M|--module)     cmbd_modules="${cmbd_modules},$2";  shift 2 ;;
        -O|--modopt)     cmbd_modopts="${cmbd_modopts} $2";  shift 2 ;;
        -k|--k-ary)      cmbd_kary=$2;                       shift 2 ;;
        -X|--noexec)     cmd_wrapper=echo;                   shift 1 ;;
        --)              shift; break                                ;;
        *)               usage; exit 1                               ;;
    esac
done

# leftover arguments are assumed to be --command to execute
# If there are none, run with --pty for interactive shell on rank 0
ARGS=( ${@:$OPTIND} )
if test ${#ARGS[@]} -eq 0; then
    srun_opts="${srun_opts} --pty"
    set ""
else
    set "${ARGS[@]}"
fi

test -z "$srun_nnodes" && test -z "$srun_ntasks" && usage && exit 1
test -z "$cmd_wrapper" && ! test -f ${slurm_conf} && die "SLURM not configured"
test -n "$cmd_wrapper" || set -x
test -x $path_cmbd || die "$path_cmbd not found or not executable"

$cmd_wrapper ulimit -c unlimited
$cmd_wrapper ${path_srun} ${srun_opts} \
    ${srun_nnodes:+--nodes=${srun_nnodes}} \
    ${srun_ntasks:+--ntasks=${srun_ntasks}} \
    ${srun_partition:+--partition=${srun_partition}} \
    ${path_cmbd} ${cmbd_opts} \
    ${cmbd_kary:+--k-ary=${cmbd_kary}} \
    ${cmbd_modules:+--modules=${cmbd_modules}} \
    ${@:+--command=\"$@\"} \
    ${cmbd_modopts}

# vi:tabstop=4 shiftwidth=4 expandtab
